@import "tailwindcss";

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@plugin "@tailwindcss/typography";

@theme {
  --font-sans: var(--sans-font);
  --font-mono: var(--mono-font);

  @keyframes marquee {
    from {
      transform: translateX(0%);
    }
    to {
      transform: translateX(-50%);
    }
  }
  --animate-marquee: marquee 25s linear infinite;

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  --animate-fade-in: fadeIn 400ms cubic-bezier(0.16, 1, 0.3, 1);

  @keyframes swing {
    from {
      transform: rotate(3deg);
    }
    to {
      transform: rotate(-3deg);
    }
  }
  --animate-swing: swing 1s infinite ease-in-out alternate;

  @keyframes scale {
    from {
      opacity: 0;
      transform: scale(0);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  --animate-scale: scale 150ms cubic-bezier(0.4, 0, 0.2, 1);

  @keyframes rise {
    from {
      transform: translate(0, 20%) scale(0.8);
    }
    to {
      transform: translate(0, 0) scale(1);
    }
  }
  --animate-rise: rise 150ms cubic-bezier(0.4, 0, 0.2, 1);

  @keyframes shake {
    0% {
      transform: translate(1px, 1px) rotate(0deg);
    }
    10% {
      transform: translate(-1px, -2px) rotate(-1deg);
    }
    20% {
      transform: translate(-3px, 0px) rotate(1deg);
    }
    30% {
      transform: translate(3px, 2px) rotate(0deg);
    }
    40% {
      transform: translate(1px, -1px) rotate(1deg);
    }
    50% {
      transform: translate(-1px, 2px) rotate(-1deg);
    }
    60% {
      transform: translate(-3px, 1px) rotate(0deg);
    }
    70% {
      transform: translate(3px, 1px) rotate(-1deg);
    }
    80% {
      transform: translate(-1px, -1px) rotate(1deg);
    }
    90% {
      transform: translate(1px, 2px) rotate(0deg);
    }
    100% {
      transform: translate(1px, -2px) rotate(-1deg);
    }
  }

  --animate-shake: shake 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

::-moz-selection {
  @apply bg-zinc-600 text-white;
  -webkit-text-fill-color: white;
}

::selection {
  @apply bg-zinc-600 text-white;
  -webkit-text-fill-color: white;
}

* {
  -webkit-font-smoothing: antialiased;
}
